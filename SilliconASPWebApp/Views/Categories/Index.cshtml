@model CategoryFormModel
@inject CategoryService cService
@{
    ViewData["Title"] = "Category";
    var categories = await cService.GetCategoriesAsync();
}

<section id="category">
    <div class="container">

        @if (TempData["Message"]?.ToString() == "created")
        {
            <div>Created</div>
        }
        else if (TempData["Message"]?.ToString() == "confilct")
        {
            <div>Category already exists</div>
        }
        else if (TempData["Message"]?.ToString() == "bad data")
        {
            <div>Enter a valid category</div>
        }

        <form novalidate method="post" asp-action="CreateCategory" asp-controller="Categories">
            <div id="form-categoryName" class="input-group">
                <label asp-for="CategoryName"></label>
                <span asp-validation-for="CategoryName"></span>
                <input asp-for="CategoryName" />
            </div>

            <button type="submit" class="btn-theme">Add category</button>
        </form>

        <form novalidate method="post" asp-action="DeleteCategory" asp-controller="Categories">
            <div class="select-container">
                <label>Category *</label>
                <select name="categoryId">
                    @if (categories != null)
                    {
                        foreach (var category in categories)
                        {
                            <option value="@category.Id" >@category.CategoryName</option>
                        }
                    }
                </select>
            </div>

            <button type="submit" class="btn-theme deleteBtn">Delete category</button>
        </form>
    </div>
</section>
@await Html.PartialAsync("_ValidationScriptPartial")